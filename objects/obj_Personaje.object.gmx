<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_carta_parado_der</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vel_vertical=0;
vel_horizontal=0;
gravedad=0.7;
vel_caminata=8;


   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Verificacion teclas
tecla_izq = keyboard_check(vk_left);
tecla_der = keyboard_check(vk_right);
tecla_abajo = keyboard_check(vk_down);
barra_espaciadora = keyboard_check_pressed(vk_space);

//Calcular movimiento
var movimiento = tecla_der - tecla_izq;

vel_horizontal = movimiento * vel_caminata;

vel_vertical = vel_vertical + gravedad;

//Salto
if (place_meeting(x,y+1,obj_bloque)) &amp;&amp; (barra_espaciadora)
{
    audio_play_sound(snd_salto, 0,0);
    vel_vertical = -14;
}


//Colisión horizontal con bloque
if (place_meeting(x+vel_horizontal,y,obj_bloque))
{
while(!place_meeting(x+sign(vel_horizontal),y,obj_bloque))
{
x = x + sign(vel_horizontal);
}
vel_horizontal = 0;
}

x = x + vel_horizontal;

//Colisión vertical con bloque
if (place_meeting(x,y+vel_vertical,obj_bloque))
{
while(!place_meeting(x,y+sign(vel_vertical),obj_bloque))
{
y = y + sign(vel_vertical);
}
vel_vertical = 0;
}

y = y + vel_vertical;






//Animación izquierda-derecha
if (movimiento==1) //si es positivo, va hacia la derecha
{
sprite_index = spr_carta_caminando_der;
} else if (movimiento==-1) //si es negativo, va hacia la izquierda
{
sprite_index = spr_carta_caminando_izq;
} else if (sprite_index==spr_carta_caminando_der)
{
sprite_index = spr_carta_parado_der;
} else if (sprite_index==spr_carta_caminando_izq) 
{
sprite_index = spr_carta_parado_izq;
} else if ((tecla_abajo) &amp;&amp; (sprite_index=spr_carta_parado_der)) //comprueba tecla_abajo y el personaje se agacha
{
sprite_index = spr_carta_agachado_der;

} else if ((tecla_abajo) &amp;&amp; (sprite_index=spr_carta_parado_izq))
{
sprite_index = spr_carta_agachado_izq;

} else if ((!tecla_abajo) &amp;&amp; (sprite_index=spr_carta_agachado_der))
{
sprite_index = spr_carta_parado_der;
} else if ((!tecla_abajo) &amp;&amp; (sprite_index=spr_carta_agachado_izq))
{
sprite_index = spr_carta_parado_izq;
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,32</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
